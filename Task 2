import pandas as pd
import numpy as np
from sklearn.cluster import KMeans
from sklearn.preprocessing import StandardScaler
from sklearn.metrics import silhouette_score

# Sample data
data = {
    'CustomerID': [1, 2, 3, 4, 5],
    'AmountSpent': [100, 200, 150, 300, 250],
    'Frequency': [10, 20, 15, 30, 25],
    'Recency': [30, 60, 45, 90, 75]
}

# Convert to DataFrame
df = pd.DataFrame(data)

# Feature selection
features = ['AmountSpent', 'Frequency', 'Recency']
X = df[features]

# Data normalization
scaler = StandardScaler()
X_scaled = scaler.fit_transform(X)

# K-means clustering
k = 3
kmeans = KMeans(n_clusters=k, random_state=0)
clusters = kmeans.fit_predict(X_scaled)

# Add cluster labels to the DataFrame
df['Cluster'] = clusters

# Evaluate clustering
silhouette_avg = silhouette_score(X_scaled, clusters)

print("Cluster Labels:\n", df)
print("\nSilhouette Score:", silhouette_avg)
